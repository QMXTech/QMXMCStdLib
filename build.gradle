buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.9.8'
}

apply plugin: 'net.minecraftforge.gradle.forge'

def getGitRef() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch ( Throwable ignored ) {
        return "unknown"
    }
}

group = "com.qmxtech.qmxmcstdlib" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "QMXMCStdLib"

if( project.hasProperty( "buildNumber" ) ) {
    ext.buildNumber = buildNumber
    ext.artifactoryPath = "minecraft-release"
}
else {
    ext.buildNumber = getGitRef()
    ext.artifactoryPath = "minecraft-snapshot"
}

version = "${version}-${ext.buildNumber}"

minecraft {
    version = project.mcversion + "-" + project.forgeversion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpversion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace '@VERSION@', project.version
    replace '@BUILD_NUMBER@', project.ext.buildNumber
}

repositories {
    mavenCentral()
    maven {
        name = "OC repo"
        url = "http://maven.cil.li/"
    }
    maven {
        name = "ElytraDev"
        url = 'https://repo.elytradev.com/'
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    deobfCompile "li.cil.oc:OpenComputers:MC1.12.2-1.7.+"
    deobfCompile 'com.elytradev:mirage:2.0.3-rc3-SNAPSHOT'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

artifacts {
    archives jar
    archives sourceJar
}

artifactory {
    if( project.hasProperty( "artifactoryUser" ) ) {
        contextUrl = 'https://artifactory.qmx-software.com/'
        publish {
            repository {
                repoKey = project.ext.artifactoryPath
                username = project.getProperty( "artifactoryUser" )
                password = project.getProperty( "artifactoryPass" )
            }
            defaults {
                publishConfigs( "archives" );

                publishArtifacts = true
                publishPom = true
            }
        }
    }
}
